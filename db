#!/bin/sh

error()
{
    if [ ! -f $1 ]
    then
	echo "ERROR: $1 is not a file" >&2
	exit 1
    elif [ ! -w $1 ]
    then
	echo "ERROR: $1 is not writable" >&2
	exit 1
    elif [ ! -r $1 ]
    then
	echo "ERROR: $1 is not readable" >&2
	exit 1
    fi
}

usage()
{
    echo -e "USAGE: $0 filename\nfilename : line by line db file - each entry must be separated with a blank line\nresult : 1 line by record, order by field name" >&2
    exit 1
}

if [ $# -eq 0 ]
then
    usage $0
fi

error $1

i=1
str=""
sizeFile=`cat $1 | wc -l`
sizeFile=$(($sizeFile + 1))

IFS="
";
tab=("$(cat $1 | cut -d: -f1 | sort)")
i=0
for elem in ${tab[0]};
do
    i=$(($i + 1))	    
    if [ $i -gt 1 ]
    then
	pos=`expr $i - 1`
	if [ "${tab[$pos]}" == "$elem" ]
	then
	    i=$(($i - 1))
	fi
    fi
    tab[$i]="$elem"
done

i=1
while [ $i -le $sizeFile ]
do
    j=0
    a=1
    line=`sed -n "$i"p $1`
    var=`echo $line | cut -d: -f1`
    if [ $i -eq 1 ]
    then
	lastLine="begin"
    fi
    while [ ! -z "${tab[$j]}" ]
    do
	if [ "$var" == "${tab[$j]}" ]
	then
	    tab[$j]=$line
	fi
	j=$(($j + 1))
	if [ $i -gt 1 ]
	then
	    i=$(($i - 1))
	    lastLine=`sed -n "$i"p $1`
	    i=$(($i + 1))
	fi    
	if [ -z "$line" ] || [ $i -eq $sizeFile ] && [ ! -z $lastLine ]
	then
	    while [ ! -z "${tab[$a]}" ]
	    do
		posChar=`expr index "${tab[$a]}" ":"`
		if [ $posChar -eq 0 ]
		then
		    str="$str${tab[$a]}:  / "
		else
		    str="$str${tab[$a]} / "
		fi
		a=$(($a + 1))
	    done
	    str=${str%?}
	    str=${str%?}
    	    str=${str%?}
	    if [ "${str:(-1)}" == " " ]
	    then
    		str=${str%?}
	    fi
	    str="$str\n"
	    a=1
	    while [ ! -z "${tab[$a]}" ]
	    do
		tab[$a]=`echo ${tab[$a]} | cut -d: -f1`
		a=$(($a + 1))
	    done
	    break
	fi
    done
    i=$(($i + 1))
done
str=${str%?}
str=${str%?}
echo -e $str > $1
exit 0

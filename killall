#!/bin/sh

usage()
{
	echo "USAGE: ${0} option" >&2;
	echo "option: -user user1 ... : Kill all processes for user1, ..." >&2;
	echo "        -pid pid1 ... : Kill a process with pid pid1, ..." >&2;
	echo "        -prog prog1 ... : Kill all processes whose program's name is prog1, ..." >&2;
	echo "        -all : Kill all processes" >&2;
}

error_manager()
{
	if [ $# -eq "0" ]; then
		usage;
		exit 1;
	fi
	if [ $# -ne "1" ] && [ ${1} = "-all" ]; then
		usage;
		exit 1;
	fi
	if [ ${1} != "-user" ] && [ ${1} != "-pid" ] && [ ${1} != "-prog" ] && [ ${1} != "-all" ]; then
		usage;
		exit 1;
	fi
	if [ ${1} = "-user" ] || [ ${1} = "-pid" ] || [ ${1} = "-prog" ]; then
		if [ $# -lt "2" ]; then
			usage;
			exit 1;
		fi
	fi
}

user()
{
	while [ $# -ne "0" ]; 
	do
		ps -uc | while read line;
		do
			if [ ${1} = "$(echo $line | cut -d' ' -f1)" ]; then
				kill -9 $(echo $line | cut -d' ' -f2);
			fi
		done;
		shift;
	done;
}

pid()
{
	while [ $# -ne "0" ]; 
	do
		if [ "$(ps | grep "${1}")" ]; then
			kill -9 ${1};
			status=0;
		else
			echo "ERROR: pid ${1} : no process found" >&2;
			status=1;
		fi
		shift
	done;
}

prog()
{
	while [ $# -ne "0" ]; 
	do
		ps | while read line;
		do
			if [ ${1} = "$(echo $line | cut -d' ' -f4)" ]; then
				kill -9 $(echo $line | cut -d' ' -f1);
			fi
		done;
		shift;
	done;
}

all()
{
	ps -A | while read line;
	do
		kill -9 $(echo $line | cut -d' ' -f1);
	done;
}

status=0;

error_manager $@;

case ${1} in
	-user)
		shift
		user $@;
		;;
	-pid)
		shift
		pid $@;
		;;
	-prog)
		shift
		prog $@;
		;;
	-all)
		all;
		;;
esac

exit $status;